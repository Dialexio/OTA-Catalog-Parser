<Type Name="NSArray" FullName="Claunia.PropertyList.NSArray">
  <TypeSignature Language="C#" Value="public class NSArray : Claunia.PropertyList.NSObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NSArray extends Claunia.PropertyList.NSObject" />
  <AssemblyInfo>
    <AssemblyName>plist-cil</AssemblyName>
    <AssemblyVersion>1.13.0.0</AssemblyVersion>
    <AssemblyVersion>1.14.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Claunia.PropertyList.NSObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Represents an Array.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSArray (Claunia.PropertyList.NSObject[] a);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Claunia.PropertyList.NSObject[] a) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="a" Type="Claunia.PropertyList.NSObject[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="a">The array which should be wrapped by the NSArray.</param>
        <summary>
            Creates a array from an existing one
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NSArray (int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 length) cil managed" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="length">The number of elements this array will be able to hold.</param>
        <summary>
            Creates an empty array of the given length.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsObject">
      <MemberSignature Language="C#" Value="public bool ContainsObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsObject(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to look for.</param>
        <summary>
            Checks whether an object is present in the array or whether it is equal
            to any of the objects in the array.
            </summary>
        <returns>
          <c>true</c>, when the object could be found. <c>false</c> otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Returns the size of the array.
            </summary>
        <value>The number of elements that this array can store.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (Claunia.PropertyList.NSObject obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(class Claunia.PropertyList.NSObject obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="Claunia.PropertyList.NSObject" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:Claunia.PropertyList.NSObject" /> to compare with the current <see cref="T:Claunia.PropertyList.NSArray" />.</param>
        <summary>
            Determines whether the specified <see cref="T:Claunia.PropertyList.NSObject" /> is equal to the current <see cref="T:Claunia.PropertyList.NSArray" />.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:Claunia.PropertyList.NSObject" /> is equal to the current
            <see cref="T:Claunia.PropertyList.NSArray" />; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The <see cref="T:System.Object" /> to compare with the current <see cref="T:Claunia.PropertyList.NSArray" />.</param>
        <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:Claunia.PropertyList.NSArray" />.
            </summary>
        <returns>
          <c>true</c> if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:Claunia.PropertyList.NSArray" />; otherwise, <c>false</c>.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArray">
      <MemberSignature Language="C#" Value="public Claunia.PropertyList.NSObject[] GetArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Claunia.PropertyList.NSObject[] GetArray() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Claunia.PropertyList.NSObject[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the array of NSObjects represented by this NSArray.
            Any changes to the values of this array will also affect the NSArray.
            </summary>
        <returns>The actual array represented by this NSArray.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Serves as a hash function for a <see cref="T:Claunia.PropertyList.NSArray" /> object.
            </summary>
        <returns>A hash code for this instance that is suitable for use in hashing algorithms and data structures such as a
            hash table.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfIdenticalObject">
      <MemberSignature Language="C#" Value="public int IndexOfIdenticalObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfIdenticalObject(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to look for.</param>
        <summary>
            Searches for an object in the array. If it is found its index will be
            returned. This method only returns the index of an object that is
            <b>identical</b> to the given one. Thus objects that might contain the
            same value as the given one will not be considered.
            </summary>
        <returns>The index of the object, if it was found. -1 otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfObject">
      <MemberSignature Language="C#" Value="public int IndexOfObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfObject(object obj) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">The object to look for.</param>
        <summary>
            Searches for an object in the array. If it is found its index will be
            returned. This method also returns an index if the object is not the same
            as the one stored in the array but has equal contents.
            </summary>
        <returns>The index of the object, if it was found. -1 otherwise.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastObject">
      <MemberSignature Language="C#" Value="public Claunia.PropertyList.NSObject LastObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Claunia.PropertyList.NSObject LastObject() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Claunia.PropertyList.NSObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Returns the last object contained in this array.
            </summary>
        <returns>The value of the highest index in the array.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectAtIndex">
      <MemberSignature Language="C#" Value="public Claunia.PropertyList.NSObject ObjectAtIndex (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Claunia.PropertyList.NSObject ObjectAtIndex(int32 i) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Claunia.PropertyList.NSObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">The index of the object.</param>
        <summary>
            Returns the object stored at the given index.
            </summary>
        <returns>The object at the given index.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectsAtIndexes">
      <MemberSignature Language="C#" Value="public Claunia.PropertyList.NSObject[] ObjectsAtIndexes (int[] indexes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Claunia.PropertyList.NSObject[] ObjectsAtIndexes(int32[] indexes) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Claunia.PropertyList.NSObject[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indexes" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indexes">The indices of the objects.</param>
        <summary>
            Returns a new array containing only the values stored at the given
            indices. The values are sorted by their index.
            </summary>
        <returns>The new array containing the objects stored at the given indices.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (int i);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(int32 i) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="i" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="i">The index of the object</param>
        <summary>
            Remove the i-th element from the array.
            The array will be resized.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (int key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(int32 key, object value) cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">The index where to store the object.</param>
        <param name="value">The object.</param>
        <summary>
            Stores an object at the specified index.
            If there was another object stored at that index it will be replaced.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToASCIIPropertyList">
      <MemberSignature Language="C#" Value="public string ToASCIIPropertyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToASCIIPropertyList() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Generates a valid ASCII property list which has this NSArray as its
            root object.
            </para>
          <para>
            The generated property list complies with the format as
            described in https://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/PropertyLists/OldStylePlists/OldStylePLists.html
            Property List Programming Guide - Old-Style ASCII Property Lists.
            </para>
        </summary>
        <returns>ASCII representation of this object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGnuStepASCIIPropertyList">
      <MemberSignature Language="C#" Value="public string ToGnuStepASCIIPropertyList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToGnuStepASCIIPropertyList() cil managed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyVersion>1.13.0.0</AssemblyVersion>
        <AssemblyVersion>1.14.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <para>
            Generates a valid ASCII property list in GnuStep format which has this
            NSArray as its root object.
            </para>
          <para>
            The generated property list complies with
            the format as described in http://www.gnustep.org/resources/documentation/Developer/Base/Reference/NSPropertyList.html
            GnuStep - NSPropertyListSerialization class documentation.
            </para>
        </summary>
        <returns>GnuStep ASCII representation of this object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
